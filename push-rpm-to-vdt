#!/usr/bin/env python
import fnmatch as fnmatch_
from fnmatch import fnmatch
from glob import glob
import re
from optparse import OptionParser
import os
import subprocess
import sys

def checked_call(*args):
    err = subprocess.call(*args)
    if err:
        raise Exception("subprocess.call(" + str(args) +
                        ") returned " + str(err) + "!")

def checked_ssh(args):
    global options
    if options.host.endswith('cs.wisc.edu'): # TODO: HACK
        checked_call(["ssh", "-x", options.host, "/s/std/bin/runauth"] + args)
    else:
        checked_call(["ssh", "-x", options.host] + args)


parser = OptionParser()
parser.add_option("--host")
parser.add_option("--yum-base", "-y")
options, args = parser.parse_args(sys.argv[1:])

rpms = args


repo = {}
for arch in ['i386', 'noarch', 'x86_64', 'src']:
    repo[arch] = os.path.join(options.yum_base, arch)

i386_rpms = fnmatch_.filter(rpms, '*.i[3-6]86.rpm')
x86_64_rpms = fnmatch_.filter(rpms, '*.x86_64.rpm')
noarch_rpms = fnmatch_.filter(rpms, '*.noarch.rpm')
src_rpms = fnmatch_.filter(rpms, '*.src.rpm')

if i386_rpms:
    checked_call(["scp", i386_rpms, options.host + ":" + options.yum_base + '/i386/'])
if x86_64_rpms:
    checked_call(["scp", x86_64_rpms, options.host + ":" + options.yum_base + '/x86_64/'])
if noarch_rpms:
    checked_call(["scp", noarch_rpms, options.host + ":" + options.yum_base + '/noarch/']) 
    checked_call(["scp", noarch_rpms, options.host + ":" + options.yum_base + '/i386/']) 
    checked_call(["scp", noarch_rpms, options.host + ":" + options.yum_base + '/x86_64/']) 
if src_rpms:
    checked_call(["scp", noarch_rpms, options.host + ":" + options.yum_base + '/src/']) 

for k in repo.keys():
    if k != 'noarch':
        checked_ssh(['/usr/bin/createrepo', '-p', '--update', '-d', repo[k]])

